{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAUA,IAAM,UAAU,SAAV,OAAU,GAAuB;MAAtB,8DAAQ,iBAAc;MAAX,sBAAW;;AACrC,UAAO,MAAP;AACE,SAAK,WAAL;AACE,aAAO,QAAQ,CAAR,CADT;AADF,SAGO,WAAL;AACE,aAAO,QAAQ,CAAR,CADT;AAHF,GADqC;CAAvB;;AAShB,IAAM,QAAQ,wBAAY,OAAZ,CAAR;;;AAGN,IAAM,cAAc,CAAd;AACN,IAAM,aAAa,CAAb;AACN,IAAM,SAAS,WAAT;;AAEN,0BAAW,WAAX;AACA,0BAAW,UAAX;;AAEA,sBAAO,QAAQ,WAAR,EAAqB,MAArB,CAAP,EAAqC,OAArC,CAA6C,UAA7C;;;AAGA,IAAM,eAAe,CAAf;AACN,IAAM,cAAc,CAAd;AACN,IAAM,UAAU,WAAV;;AAEN,0BAAW,YAAX;AACA,0BAAW,WAAX;;AAEA,sBAAO,QAAQ,YAAR,EAAsB,OAAtB,CAAP,EAAuC,OAAvC,CAA+C,WAA/C;AACA,QAAQ,GAAR,CAAY,cAAZ","file":"app.js","sourcesContent":["'use strict'\r\n\r\nimport expect from 'expect'\r\nimport { createStore } from 'redux'\r\nimport deepfreeze from 'deep-freeze'\r\n\r\n\r\n// redux\r\n// TODO: Start with egghead.io\r\n\r\nconst counter = (state = 0, action) => {\r\n  switch(action) {\r\n    case 'INCREMENT':\r\n      return state + 1\r\n    case 'DECREMENT':\r\n      return state - 1;\r\n  }\r\n};\r\n\r\nconst store = createStore(counter)\r\n\r\n// tests increment\r\nconst stateBefore = 0\r\nconst stateAfter = 1\r\nconst action = 'INCREMENT'\r\n\r\ndeepfreeze(stateBefore)\r\ndeepfreeze(stateAfter)\r\n\r\nexpect(counter(stateBefore, action)).toEqual(stateAfter);\r\n\r\n// tests decrement\r\nconst stateBefored = 2\r\nconst stateAfterd = 1\r\nconst actiond = 'DECREMENT'\r\n\r\ndeepfreeze(stateBefored)\r\ndeepfreeze(stateAfterd)\r\n\r\nexpect(counter(stateBefored, actiond)).toEqual(stateAfterd);\r\nconsole.log(\"all tests OK\");\r\n"],"sourceRoot":"/source/"}